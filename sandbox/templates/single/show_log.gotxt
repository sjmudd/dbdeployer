#!{{.ShellPath}}
{{.Copyright}}
# Generated by dbdeployer {{.AppVersion}} using {{.TemplateName}} on {{.DateTime}}
source {{.SandboxDir}}/sb_include

cd "$SBDIR"

if [ ! -d ./data ]
then
    echo "$SBDIR/data not found"
    exit 1
fi

log=$1
[ -z "$log" ] && log='err'
function get_help {
    exit_code=$1
    [ -z "$exit_code" ] && exit_code=0
    echo "# Usage: $0 [log] "
    echo "# Where 'log' is one of 'err' (error log),  'gen' (general log)"
    echo "# Or it can be a variable name that identifies a log"
    echo "# (The default is 'err')"
    exit $exit_code
}

if [ "$log" == "-h" -o "$log" == "--help" -o "$log" == "-help" -o "$log" == "help" ]
then
    get_help 0
fi

check_output

case $log in
    err)
        target=$SBDIR/data/msandbox.err
        ;;
    gen)
        target=$($SBDIR/use -BN -e "SHOW VARIABLES LIKE 'general_log_file'" | awk '{print $2}')
        ;;
    slow)
        target=$SBDIR/data/slow_log.data
        ;;
    *)
        target=$($SBDIR/use -BN -e "SHOW VARIABLES LIKE '$log'" | awk '{print $2}')
        ;;
esac

if [ -z "$target" ]
then
    echo "target not set"
    exit 1
fi
if [ ! -f $target ]
then
    echo "Log file '$target' not found"
    exit 1
fi

if [ -n "$pager" ]
then
    (printf "#\n# Showing $target\n#\n" ; cat $target ) | $pager
else
    (printf "#\n# Showing $target\n#\n" ; cat $target )
fi
