#!{{.ShellPath}}
{{.Copyright}}
# Generated by dbdeployer {{.AppVersion}} using {{.TemplateName}} on {{.DateTime}}
source {{.SandboxDir}}/sb_include
export LD_LIBRARY_PATH=$CLIENT_LD_LIBRARY_PATH

cd "$SBDIR"

#
# attempt to drop databases gracefully
#

if [ -n "$(is_running)" ]
then
    for D in $(echo "SHOW DATABASES " | ./use -B -N | grep -v "^mysql$" | grep -iv "^information_schema$" | grep -iv "^performance_schema" | grep -ivw "^sys")
    do
        echo "set sql_mode=ansi_quotes;drop database \"$D\"" | ./use
    done
    VERSION={{.Version}}
    is_slave=$(ls data | grep relay)
    if [ -n "$is_slave" ]
    then
        ./use -e "{{.StopSlaveCmd}}; {{.ResetSlaveCmd}};"
    fi
    if [[ "$VERSION" > "5.1" ]]
    then
        for T in general_log slow_log plugin
        do
            exists_table=$(./use -e "SHOW TABLES FROM mysql LIKE '$T'")
            if [ -n "$exists_table" ]
            then
                ./use -e "TRUNCATE TABLE mysql.$T"
            fi
        done
    fi
fi

is_master=$(ls data | grep 'mysql-bin')
if [ -n "$is_master" ]
then
    ./use -e '{{.ResetMasterCmd}}'
fi

./stop
rm -f data/$(hostname)*
rm -f data/log.0*
rm -f data/*.log

#
# remove all databases if any (up to 8.0)
#
if [[ "$VERSION" < "8.0" ]]
then
    for D in $(ls -d data/*/ | grep -w -v mysql | grep -iv performance_schema | grep -ivw sys)
    do
        rm -rf $D
    done
    mkdir data/test
fi
