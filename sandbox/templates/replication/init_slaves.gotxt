#!{{.ShellPath}}
{{.Copyright}}
# Generated by dbdeployer {{.AppVersion}} using {{.TemplateName}} on {{.DateTime}}

print_error () {
    local label=$1
    local rc=$2

    if [ $rc != 0 ]; then
        echo "command failed to $label, returning $rc"
    fi
}

# Don't use directly.
# This script is called by 'start_all' when needed
SBDIR={{.SandboxDir}}
cd "$SBDIR"
# workaround for Bug#89959
$SBDIR/{{.MasterLabel}}/use -h {{.MasterIp}} -u {{.RplUser}} -p{{.RplPassword}} -e 'set @a=1'
print_error {{.MasterLabel}} $?
if [ ! -f needs_initialization ]
then
	# First run: root is running without password
	export NOPASSWORD=1
fi

{{ range .Slaves }}
echo "initializing {{.SlaveLabel}} {{.Node}}"
echo '{{.ChangeMasterCmd}}  {{.MASTER_HOST}}="{{.MasterIp}}",  {{.MASTER_PORT}}={{.MasterPort}},  {{.MASTER_USER}}="{{.RplUser}}",  {{.MASTER_PASSWORD}}="{{.RplPassword}}" {{.MASTER_AUTO_POSITION}} {{.ChangeMasterExtra}}' | $SBDIR/{{.NodeLabel}}{{.Node}}/use -u root
$SBDIR/{{.NodeLabel}}{{.Node}}/use -u root -e '{{.StartSlaveCmd}}'
print_error {{.NodeLabel}} $?
{{end}}
if [ -x ./post_initialization ]
then
    unset NOPASSWORD
    ./post_initialization > post_initialization.log 2>&1
	exit_code=$?
	if [ "$exit_code" == "0" ]
	then
rm -f ./post_initialization
	fi
fi
