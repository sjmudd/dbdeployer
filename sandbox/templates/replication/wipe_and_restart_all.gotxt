#!{{.ShellPath}}
{{.Copyright}}
# Generated by dbdeployer {{.AppVersion}} using {{.TemplateName}} on {{.DateTime}}
include={{.SandboxDir}}/{{.MasterLabel}}/sb_include
if [ ! -f $include ]
then
    include={{.SandboxDir}}/node1/sb_include
fi
source $include
cd {{.SandboxDir}}
if [ -f no_clear_all ]
then
    echo "This sandbox ($(basename {{.SandboxDir}})) is locked by $(basename {{.SandboxDir}})/no_clear_all"
    echo "It cannot be removed before unlocking"
    exit 1
fi

stop_cmd="./send_kill_all destroy"

if [ "$FLAVOR" == "ndb" -o "$FLAVOR" == "$pxc" ]
then
    stop_cmd=./stop_all
fi

$stop_cmd
./exec_all rm -rf data
./exec_all ./init_db
if [ "$?" != "0" ] ; then echo "error during initialization"; exit 1 ; fi 
./start_all
if [ "$?" != "0" ] ; then echo "error during start"; exit 1 ; fi 
if [ -d {{.MasterLabel}} ]
then
    ./{{.MasterLabel}}/load_grants
else
    ./exec_all ./load_grants
fi
if [ "$?" != "0" ] ; then echo "error during grant loading"; exit 1 ; fi 
if [ -x ./initialize_{{.SlaveLabel}}s ]
then 
  ./initialize_{{.SlaveLabel}}s
elif [ -x ./initialize_nodes ]
then
  ./initialize_nodes
elif [ -x ./initialize_ms_nodes ]
then
  ./initialize_ms_nodes
fi
if [ "$?" != "0" ] ; then echo "error during slave initialization"; exit 1 ; fi 
