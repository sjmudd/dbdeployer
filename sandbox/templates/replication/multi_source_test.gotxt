#!{{.ShellPath}}
{{.Copyright}}
# Generated by dbdeployer {{.AppVersion}} using {{.TemplateName}} on {{.DateTime}}
SBDIR={{.SandboxDir}}
cd "$SBDIR"

pass=0
fail=0

function ok_equal {
	value=$1
	expected=$2
	message=$3
	if [ "$value" == "$expected" ]
	then
echo "ok - '$value' == '$expected' - $message"
pass=$((pass+1))
	else
echo "NOT OK - found: '$value' expected: '$expected' - $message"
fail=$((fail+1))
	fi
}

MASTERS="{{.MasterList}}"
SLAVES="{{.SlaveList}}"
total_tables=0
[ -z "$SLEEP_TIME" ] && SLEEP_TIME=1

for M in $MASTERS
do
	echo "# master $M"
    $SBDIR/{{.NodeLabel}}$M/use test -e "DROP TABLE IF EXISTS t$M"
    $SBDIR/{{.NodeLabel}}$M/use test -e "CREATE TABLE t$M(id INT NOT NULL PRIMARY KEY, sid INT) {{.EngineClause}}"
    $SBDIR/{{.NodeLabel}}$M/use test -e "INSERT INTO t$M VALUES ($M, @@server_id)"
	# $SBDIR/{{.NodeLabel}}$M/use test -e "show tables from test"
	total_tables=$((total_tables+1))
done
sleep $SLEEP_TIME
for S in $SLAVES
do
	echo "# slave $S"
	# $SBDIR/{{.NodeLabel}}$S/use test -e "show tables from test"

	if [[ $MYSQL_VERSION_MAJOR -ge 5 ]]
    then
        found_tables=$($SBDIR/{{.NodeLabel}}$S/use test -BN -e "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema='test'")
    else
        found_tables=$($SBDIR/{{.NodeLabel}}$S/use test -BN -e "SHOW TABLES FROM test" | wc -l | tr -d '\t ')
    fi
	ok_equal $found_tables $total_tables "Slaves received tables from all masters"
done

echo "# pass: $pass"
echo "# fail: $fail"
if [ "$fail" != "0" ]
then
	exit 1
fi
exit 0
